name: Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  actions: read
  checks: write

jobs:
  analyze:
    name: Build and analyze
    runs-on: windows-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      
      # Checkout the main user repository
      - uses: actions/checkout@v3
        with:
          path: user  # Check out into a specific directory

      # Checkout the shared repository
      - uses: actions/checkout@v3
        with:
          repository: projeli/shared
          path: shared   # Check out into a separate directory
          token: ${{ secrets.GITHUB_TOKEN }}  # Usually sufficient for same-org repos

      - name: Cache SonarQube Cloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarQube Cloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarQube Cloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        working-directory: user
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          ..\.sonar\scanner\dotnet-sonarscanner begin /k:"projeli_user" /o:"projeli" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build
          ..\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
  deploy:
    name: Deploy Docker Images
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: [ analyze ]
    
    steps:
      - uses: actions/checkout@v3
        with:
          path: user

      - uses: actions/checkout@v3
        with:
          repository: projeli/shared
          path: shared

      - name: Log into Docker Hub
        uses: docker/login-action@v2
        with:
          username: daqem
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: user/Projeli.UserService.Api/Dockerfile
          push: true
          tags: daqem/projeli:user
